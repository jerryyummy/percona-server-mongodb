load("//bazel:mongo_src_rules.bzl", "mongo_cc_library", "mongo_cc_unit_test")

package(default_visibility = ["//visibility:public"])

exports_files([
    "document_source_extension_test.cpp",
])

mongo_cc_library(
    name = "api",
    srcs = [
        "document_source_extension.cpp",
        "stage_registry.cpp",
    ],
    hdrs = [
        "aggregation_stage.h",
        "byte_buf.h",
        "document_source_extension.h",
        "extension_status.h",
        "handle.h",
        "stage_registry.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/mongo/db/extension/public:api",
        # Note, for the time being we are linking in the C++ SDK here to reduce code duplication.
        # Eventually, we may decouple the C++ SDK from the server and remove this dependency.
        "//src/mongo/db/extension/sdk:sdk_cpp",
        "//src/mongo:base",
        "//src/mongo/db/pipeline",
    ],
)

# TODO SERVER-106685 This target is not yet linked into mongod, just the unit tests. When we
# link it into mongod, we should platform-conditionally link either this target or a
# non-Linux-specific implementation of load_extension.cpp that throws an error for attempting
# to load an extension on a non-Linux platform. In that case, it may be worth creating a separate
# target just for load_extension.
mongo_cc_library(
    name = "extension_loader",
    srcs = ["load_extension.cpp"],
    hdrs = ["load_extension.h"],
    target_compatible_with = select({
        "//bazel/config:shared_archive_or_link_dynamic": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }) + select({
        "@platforms//os:linux": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        "//src/mongo:base",
        "//src/mongo/db/extension/public:api",
    ],
)

mongo_cc_unit_test(
    name = "extensions_api_test",
    srcs = [
        "load_extension_test.cpp",
    ],
    # Data lists the targets that must be built to generate extension shared libraries, which are
    # loaded in the unit tests.
    data = [
        "//src/mongo/db/extension/test_examples:foo_extension",
        "//src/mongo/db/extension/test_examples:malformed1_extension",
        "//src/mongo/db/extension/test_examples:malformed2_extension",
        "//src/mongo/db/extension/test_examples:malformed3_extension",
        "//src/mongo/db/extension/test_examples:malformed4_extension",
        "//src/mongo/db/extension/test_examples:malformed5_extension",
        "//src/mongo/db/extension/test_examples:malformed6_extension",
    ],
    tags = ["mongo_unittest_seventh_group"],
    target_compatible_with = select({
        "//bazel/config:shared_archive_or_link_dynamic": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }) + select({
        "@platforms//os:linux": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":extension_loader",
    ],
)
